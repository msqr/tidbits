<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
	DAO implementations. Depends on beans defined in webEnvironmentContext.xml
	(or other context for command-line tools and unit tests).
-->
<beans>
	
	<bean id="mySessionFactory" 
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource"><ref bean="myDataSource"/></property>
		<property name="mappingResources">
			<list>
				<value>magoffin/matt/tidbits/dao/hbm/tidbits.hbm.xml</value>
				<value>magoffin/matt/tidbits/domain/Tidbit.hbm.xml</value>
				<value>magoffin/matt/tidbits/domain/TidbitKind.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- 
	  myTransactionManager: the Hibernate transaction manager
	  -->
	<bean id="myTransactionManager" name="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory"/>
		<property name="dataSource" ref="myDataSource"/>
	</bean>
	
	
	<!--
	  myTransactionInterceptor: transaction interceptor to enable 
	  declaritive transactions
	  -->
	<bean id="myTransactionInterceptor" 
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="myTransactionManager"/>
		<property name="transactionAttributeSource">
			<value>
				magoffin.matt.tidbits.biz.TidbitsBiz.find*=PROPAGATION_REQUIRED,readOnly
				magoffin.matt.tidbits.biz.TidbitsBiz.save*=PROPAGATION_REQUIRED
			</value>
		</property>
	</bean>
	
	
	<!--
	 myJdbcTemplate: Spring JdbcTemplate to make hand-coded JDBC calls
	 -->
	<bean id="myJdbcTemplate" name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="myDataSource"/>
	</bean>
	
	
	<!--
	 myTransactionTemplate: Spring TransactionTemplate to make hand-coded JDBC transactions
	 -->
	<bean id="myTransactionTemplate" name="transactionTemplate" 
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="myTransactionManager"/>
	</bean>
	
	
	<!--
	  baseDAO: base bean definition for HibernateDaoSupport implementations
	  -->
	<bean id="baseTidbitsDao" abstract="true">
		<property name="sessionFactory" ref="mySessionFactory"/>
	</bean>
	
	
	<!--======================================================================
		DAO definitions.
	    ======================================================================-->
	
	<bean id="tidbitDao" parent="baseTidbitsDao"
		class="magoffin.matt.tidbits.dao.hbm.HibernateTidbitDao">
		<property name="domainObjectFactory" ref="domainObjectFactory"/>
	</bean>
	
	<bean id="tidbitKindDao" parent="baseTidbitsDao"
		class="magoffin.matt.tidbits.dao.hbm.HibernateTidbitKindDao"/>
	
	<bean id="settingsDao" 
		class="magoffin.matt.xweb.util.XwebJdbcParamDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	
</beans>
